{"ast":null,"code":"var _jsxFileName = \"/Users/cankarahasanoglu/netflixify/src/Row.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\n\nfunction Row({\n  title\n}) {\n  const [movies, setMovies] = useState([]); // A snippet of code which runs based on a specific condition/variable\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      console.log(requests);\n    } // if [], run once when the row loads and dont run again.\n\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, title));\n}\n\nexport default Row;","map":{"version":3,"sources":["/Users/cankarahasanoglu/netflixify/src/Row.js"],"names":["React","useState","useEffect","axios","Row","title","movies","setMovies","fetchData","request","get","fetchUrl","console","log","requests"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,GAAT,CAAa;AAAEC,EAAAA;AAAF,CAAb,EAAwB;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC,CADoB,CAGpB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,mBAAeM,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUC,QAAV,CAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACH,KALW,CAMZ;;AACH,GAPQ,EAON,EAPM,CAAT;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,KAAL,CADJ,CADJ;AAQH;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from './axios';\n\nfunction Row({ title }) {\n    const [movies, setMovies] = useState([]);\n\n    // A snippet of code which runs based on a specific condition/variable\n    useEffect(() => {\n\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            console.log(requests);\n        }\n        // if [], run once when the row loads and dont run again.\n    }, []);\n\n\n    return (\n        <div>\n            <h2>{title}</h2>\n\n            {/* container -> posters */}\n\n        </div>\n    )\n}\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}